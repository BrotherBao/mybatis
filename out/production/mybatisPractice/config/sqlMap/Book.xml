<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Cofing 3.9//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，作用是对sql进行分类化管理，可以理解为sql隔离
注意：使用mapper代理方法开发，namespace有其他特殊重要作用
-->
<mapper namespace="test">
    <!--id标识映射文件中的sql语句
    将sql语句封装到mapperStatement对象中，所以这个id可以称为Statement的id
    parameterType：指定输入参数的类型
    #{}表示一个占位符
    resultType：指定sql输出结果的映射的java对象类型
    -->
    <select id="findBookByBid" parameterType="String" resultType="cn.bao.mybatis.entity.Book">
        SELECT * FROM book WHERE bid =#{bid}
    </select>
    <!--
    根据图书作者模糊查询用户信息，可能返回多条数据
    resultType:指定用户单条记录所映射的Java对象类型
    使用${}：表示拼接sql串，将接受到参数的内容不加任何修饰的拼接在sql中
    ${value}：接受输入参数的内容，如果传入类型是简单类型，${}中只能是value
    -->
    <select id="findBookByName" parameterType="String" resultType="cn.bao.mybatis.entity.Book">
        SELECT * FROM book WHERE author LIKE '%${value}%'
    </select>
    <!--添加用户
    parameterType：指定输入参数类型是Book（包括图书信息）
    #{}中指定Book属性名，接受Book对象的属性值，mybatis通过OGNL获取对象的属性值
    -->
    <insert id="insertBook" parameterType="cn.bao.mybatis.entity.Book">
        INSERT INTO book(bid,bname,price,author,image,cid) VALUE (#{bid},#{bname},#{price},#{author},#{image},#{cid})
    </insert>
</mapper>